---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: slash-backend-config
  name: slash-backend-config
data: 
  quarkus.hibernate-orm.database.generation: "drop-and-create"
  quarkus.hibernate-orm.sql-load-script: "no-file"
  quarkus.datasource.jdbc.url: "jdbc:postgresql://slash-db:5432/quarkus"
  quarkus.http.cors: "true"
  quarkus.http.cors.origins: "*"
  quarkus.http.cors.headers: "accept, authorization, content-type, x-requested-with, access-control-allow-origin"
  quarkus.http.cors.methods: "GET, OPTIONS, POST"
  quarkus.swagger-ui.always-include: "true"
  quarkus.rest-client.extensions-api.url: "http://slash-scraper:8000"
  quarkus.rest-client.extensions-api.verify-host: "false"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: slash-backend
  name: slash-backend
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: slash-backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: slash-backend
  name: slash-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slash-backend
  template:
    metadata:
      labels:
        app: slash-backend
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: slash-backend-config
          image: quay.io/loganwilliams0/slash/slash-backend:latest
          imagePullPolicy: Always
          name: slash-backend
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 256Mi
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: slash-backend
  name: slash-backend
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: slash-backend